from konlpy.corpus import kolaw
from konlpy.tag import Okt
import matplotlib.pyplot as plt
from matplotlib import font_manager, rc
from wordcloud import WordCloud

const_doc = kolaw.open('constitution.txt').read()

# print(type(const_doc))
# print(len(const_doc))
# print(const_doc[:600])

# <class 'str'>
# 18884
# 대한민국헌법
#
# 유구한 역사와 전통에 빛나는 우리 대한국민은 3·1운동으로 건립된 대한민국임시정부의 법통과 불의에 항거한 4·19민주이념을 계승하고,
# 조국의 민주개혁과 평화적 통일의 사명에 입각하여 정의·인도와 동포애로써 민족의 단결을 공고히 하고, 모든 사회적 폐습과 불의를 타파하며,
# 자율과 조화를 바탕으로 자유민주적 기본질서를 더욱 확고히 하여 정치·경제·사회·문화의 모든 영역에 있어서 각인의 기회를 균등히 하고,
# 능력을 최고도로 발휘하게 하며, 자유와 권리에 따르는 책임과 의무를 완수하게 하여, 안으로는 국민생활의 균등한 향상을 기하고 밖으로는
# 항구적인 세계평화와 인류공영에 이바지함으로써 우리들과 우리들의 자손의 안전과 자유와 행복을 영원히 확보할 것을 다짐하면서
# 1948년 7월 12일에 제정되고 8차에 걸쳐 개정된 헌법을 이제 국회의 의결을 거쳐 국민투표에 의하여 개정한다.
#
#        제1장 총강
#   제1조 ① 대한민국은 민주공화국이다.
# ②대한민국의 주권은 국민에게 있고, 모든 권력은 국민으로부터 나온다.
#   제2조 ① 대한민국의 국민이 되는 요건은 법률로 정한다.
# ②국가는 법률이 정하는 바에 의하여 재외국민을 보호할 의무를 진다.
#   제3조 대한민

t = Okt()
# tokens_const = t.morphs(const_doc)      # 형태소 단위로 tokenize

# print('#토큰의 수:', len(tokens_const))
# print('#앞 100개의 토큰')
# print(tokens_const[:100])

# #토큰의 수: 8796
# #앞 100개의 토큰
# ['대한민국', '헌법', '\n\n', '유구', '한', '역사', '와', '전통', '에', '빛나는', '우리', '대', '한', '국민', '은', '3', '·',
# '1', '운동', '으로', '건립', '된', '대한민국', '임시정부', '의', '법', '통과', '불의', '에', '항거', '한', '4', '·', '19',
# '민주', '이념', '을', '계승', '하고', ',', '조국', '의', '민주', '개혁', '과', '평화', '적', '통일', '의', '사명', '에', '입',
# '각하', '여', '정의', '·', '인도', '와', '동포', '애', '로써', '민족', '의', '단결', '을', '공고', '히', '하고', ',', '모든',
# '사회', '적', '폐습', '과', '불의', '를', '타파', '하며', ',', '자율', '과', '조화', '를', '바탕', '으로', '자유민주', '적',
# '기', '본', '질서', '를', '더욱', '확고히', '하여', '정치', '·', '경제', '·', '사회', '·']

tokens_const = t.nouns(const_doc)       # 형태소 단위로 tokenize 후 명사만 추출
# print('#토큰의 수:', len(tokens_const))
# print('#앞 100개의 토큰')
# print(tokens_const[:100])

# #토큰의 수: 3882
# #앞 100개의 토큰
# ['대한민국', '헌법', '유구', '역사', '전통', '우리', '국민', '운동', '건립', '대한민국', '임시정부', '법', '통과', '불의',
# '항거', '민주', '이념', '계승', '조국', '민주', '개혁', '평화', '통일', '사명', '입', '각하', '정의', '인도', '동포',
# '애', '로써', '민족', '단결', '공고', '모든', '사회', '폐습', '불의', '타파', '자율', '조화', '바탕', '자유민주', '질서',
# '더욱', '정치', '경제', '사회', '문화', '모든', '영역', '각인', '기회', '능력', '최고', '도로', '발휘', '자유', '권리',
# '책임', '의무', '완수', '안', '국민', '생활', '향상', '기하', '밖', '항구', '세계', '평화', '인류', '공영', '이바지',
# '함', '우리', '우리', '자손', '안전', '자유', '행복', '확보', '것', '다짐', '제정', '차', '개정', '헌법', '이제', '국회',
# '의결', '국민투표', '개정', '제', '장', '강', '제', '대한민국', '민주공화국', '대한민국']

tokens_const = [token for token in  tokens_const if len(token) > 1]
# print('#토큰의 수:', len(tokens_const))
# print('#앞 100개의 토큰')
# print(tokens_const[:100])

# #토큰의 수: 3013
# #앞 100개의 토큰
# ['대한민국', '헌법', '유구', '역사', '전통', '우리', '국민', '운동', '건립', '대한민국', '임시정부', '통과', '불의', '항거',
# '민주', '이념', '계승', '조국', '민주', '개혁', '평화', '통일', '사명', '각하', '정의', '인도', '동포', '로써', '민족', '단결',
# '공고', '모든', '사회', '폐습', '불의', '타파', '자율', '조화', '바탕', '자유민주', '질서', '더욱', '정치', '경제', '사회',
# '문화', '모든', '영역', '각인', '기회', '능력', '최고', '도로', '발휘', '자유', '권리', '책임', '의무', '완수', '국민', '생활',
# '향상', '기하', '항구', '세계', '평화', '인류', '공영', '이바지', '우리', '우리', '자손', '안전', '자유', '행복', '확보', '다짐',
# '제정', '개정', '헌법', '이제', '국회', '의결', '국민투표', '개정', '대한민국', '민주공화국', '대한민국', '주권', '국민', '모든',
# '권력', '국민', '대한민국', '국민', '요건', '법률', '국가', '법률', '재외국민']

plt.rcParams["font.family"] = "NanumGothic"
# font_name = font_manager.FontProperties(fname="c:/Windows/Fonts/malgun.ttf").get_name()

const_cnt = {}
for word in tokens_const:
    const_cnt[word] = const_cnt.get(word, 0) + 1


def word_graph(cnt, max_words=10):

    sorted_w = sorted(cnt.items(), key=lambda kv: kv[1])
    print(sorted_w[-max_words:])
    n, w = zip(*sorted_w[-max_words:])

    plt.barh(range(len(n)), w, tick_label=n)
    # plt.savefig('bar.png') # 필요한 경우, 그래플를 이미지 파일로 저장
    plt.show()


# word_graph(const_cnt, max_words=20)

font_path = 'C:/windows/Fonts/NanumGothic.ttf'
# wordcloud = WordCloud(font_path=font_path).generate(const_doc)
wordcloud = WordCloud(
    font_path = font_path,
    max_font_size = 100,
    width = 800,    # 이미지 너비 지정
    height = 400,   # 이비지 높이 지정
    background_color='white',   # 이비지 배경색 지정
    max_words=50
)

# 원문이 아닌 형태소 분석 결과로부터 워드 클라우드를 생성
wordcloud.generate_from_frequencies(const_cnt)

wordcloud.to_file("const.png")  # 생성한 이미지를 파일로 저장

plt.axis("off")
plt.imshow(wordcloud, interpolation='bilinear')
plt.show()
